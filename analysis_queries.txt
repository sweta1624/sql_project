--Senior most employee based on job title
select * from employee
ORDER BY LEVELS DESC
LIMIT 1 


--WHICH COUNTRIES HAVE THE MOST INVOICE

select COUNT(*) as X, BILLING_COUNTRY 
FROM INVOICE
GROUP BY BILLING_COUNTRY
ORDER BY X DESC

--TOP 3 VALUES OF TOTAL INVOICE
SELECT TOTAL FROM INVOICE
ORDER BY TOTAL DESC
LIMIT 3


--WHICH CITY HAS THE BEST CUSTOMERS? WE WOULD LIKE TO THROW A PROMOTIONAL MUSIC FESTIVAL IN THE CITY WE MADE THE MOST MONEY.
--WRITE A QUERY THAT RETURNS ONE CITY THAT HAS THE HIGHEST SUM OF INVOICE TOTALS. RETURN BOTH THE CITY NAME AND SUM OF ALL INVOICE TOTALS
SELECT SUM(TOTAL) AS INVOICE_TOTAL, BILLING_CITY FROM INVOICE
GROUP BY BILLING_CITY
ORDER BY INVOICE_TOTAL DESC
LIMIT 1


--WHO IS THE BEST CUSTOMER? THE CUSTOMER WHO HAS SPENT THE MOST MONEY WILL BE DECLARED AS THE BEST CUSTOMER
 SELECT C.FIRST_NAME, C.LAST_NAME, SUM(I.TOTAL) AS TOTAL 
 FROM CUSTOMER C
 JOIN INVOICE I ON I.CUSTOMER_ID = C.CUSTOMER_ID
 GROUP BY C.CUSTOMER_ID
 ORDER BY TOTAL DESC
 LIMIT 1


--WRITE A QUERY THE RETURN THE EMAIL, FIRST NAME, LAST NAME AND GENRE
--OF ALL ROCK MUSIC LISTENERS. RETURN YOUR LIST ORDERED ALPHABETICALLY
-- BY EMAIL STARTING WITH A
SELECT DISTINCT EMAIL,FIRST_NAME,LAST_NAME FROM CUSTOMER C 
INNER JOIN INVOICE I ON C.CUSTOMER_ID=I.CUSTOMER_ID 
INNER JOIN INVOICE_LINE IL ON IL.INVOICE_ID=I.INVOICE_ID
WHERE TRACK_ID IN(SELECT TRACK_ID FROM TRACK INNER JOIN
				 GENRE ON TRACK.GENRE_ID=GENRE.GENRE_ID WHERE GENRE.NAME LIKE "ROCK")
ORDER BY EMAIL



--return all track names that have a song length longer than the avrage song length.
--return the name and milliseconds for each track. Order by the song length with the longest songs listed first.
SELECT NAME,MILLISECONDS FROM TRACK
WHERE MILLISECONDS >(
SELECT AVG(MILLISECONDS) AS AVG_MIL FROM TRACK)
ORDER BY MILLISECONDS DESC




--FIND HOW MUCH AMOUNT IS SPENT BY EACH CUSTOMER ON ARTISTS?
--FIND HOW MUCH AMOUNT IS SPENT BY EACH CUSTOMER ON ARTISTS?
WITH BEST_SELLING_ARTIST AS(
SELECT ARTIST.ARTIST_ID, ARTIS.NAME,
	SUM(I.UNIT_PRICE*I.QUANTITY) AS TOTAL
	FROM INVOICE_LINE I
	INNER JOIN TRACK ON TRACK.TRACK_ID=I.TRACK_ID
	INNER JOIN ALBUM ON ALBUM.ALBUM_ID=TRACK.ALBUM_ID
	INNER JOIN ARTIST ON ARTIST.ARTIST_ID=ALBUM.ARTIST_ID
	GROUP BY 1
	ORDER BY 3 DESC
	LIMIT 1
)
SELECT C.CUSTOMER_ID, C.FIRST_NAME,C.LAST_NAME,BSA.ARTIST_NAME,
SUM(IL.UNIT_PRICE*IL.QUANTITY) AS AMOUNT_SPENT
FROM INVOICE I
JOIN CUSTOMER C ON C.CUSTOMER_ID=I.CUSTOMER_ID
JOIN INVOICE_LINE IL ON IL.INVOICE_ID=I.INVOICE_ID
JOIN TRACK T ON T.TRACK_ID=IL.TRACK_ID
JOIN ALBUM AL ON AL.ALBUM_ID=T.ALBUM_ID
JOIN BEST_SELLING_ARTIST BDS ON BSA.ARTIST_ID=AL.ARTIST_ID
GROUP BY 1,2,3,4
ORDER BY 5 DESC;





--WE WANT TO FIND OUT THE MOST POPULAR MUSIC GENRE FOR EACH COUNTRY. WE DETERMINE THE MOST POPULAR GENRE AS THE GENRE WITH THE HIGHEST
--AMOUNT OF PURCHASES. WRITE A QUERY THAT RETURNS EACH COUNTRY ALONG WITH THE TOP GENRE. FOR COUNTRIES WHERE THE MAXIMUM 
--NUMBER OF PURCHASES IS SHARED RETURN ALL GENRES.

WITH popular_genre AS 
(
    SELECT COUNT(invoice_line.quantity) AS purchases, customer.country, genre.name, genre.genre_id, 
	ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo 
    FROM invoice_line 
	JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	GROUP BY 2,3,4
	ORDER BY 2 ASC, 1 DESC
)
SELECT * FROM popular_genre WHERE RowNo <= 1

